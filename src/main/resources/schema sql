-- Create USER table
CREATE TABLE IF NOT EXISTS users (
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email      VARCHAR(255) NOT NULL UNIQUE,
    first_name VARCHAR(255) NOT NULL,
    last_name  VARCHAR(255) NOT NULL,
    password   VARCHAR(255) NOT NULL
);

-- Create BANK ACCOUNT table
CREATE TABLE IF NOT EXISTS bank_account (
    id                              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id                         BIGINT NOT NULL
        CONSTRAINT bank_account_to_users
        REFERENCES users,
    description                     VARCHAR(255),
    name                            VARCHAR(255) NOT NULL,
    currency_symbol                 VARCHAR(5),
    amount_in_bank_after_search_strings JSONB,
    amount_search_strings           JSONB,
    counter_party_search_strings    JSONB,
    date_search_strings             JSONB
);

-- Create SAVINGS-BANK-ACCOUNT table
CREATE TABLE IF NOT EXISTS savings_bank_account (
    interest_rate                DOUBLE PRECISION NOT NULL,
    id                           BIGINT NOT NULL
        CONSTRAINT saving_bank_account
        REFERENCES bank_account(id),
    interest_rate_search_strings JSONB
);

-- Create COUNTER-PARTY table
CREATE TABLE IF NOT EXISTS counter_party (
    id                           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id                      BIGINT NOT NULL
        CONSTRAINT counter_party_to_users
        REFERENCES users(id),
    counter_party_search_strings  JSONB,
    description                  VARCHAR(255),
    name                         VARCHAR(255) NOT NULL,
    is_hidden                    BOOLEAN NOT NULL DEFAULT FALSE
);

-- Create CONTRACT table
CREATE TABLE IF NOT EXISTS contract (
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    months_between_payments  INTEGER NOT NULL,
    end_date                DATE,
    last_updated_at         DATE NOT NULL,
    start_date              DATE NOT NULL,
    last_payment_date       DATE NOT NULL,
    counter_party_id        BIGINT NOT NULL
        CONSTRAINT contract_counter_party
        REFERENCES counter_party(id),
    bank_account_id         BIGINT NOT NULL
        CONSTRAINT contract_bank_account_id
        REFERENCES bank_account(id),
    description             VARCHAR(255),
    name                    VARCHAR(255) NOT NULL,
    amount                  DOUBLE PRECISION NOT NULL,
    is_hidden               BOOLEAN NOT NULL DEFAULT FALSE
);

-- Create CONTRACT-HISTORY table
CREATE TABLE IF NOT EXISTS contract_history (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    contract_id     BIGINT NOT NULL
        CONSTRAINT contract_history_contract
        REFERENCES contract(id),
    new_amount      DOUBLE PRECISION NOT NULL,
    previous_amount DOUBLE PRECISION NOT NULL,
    changed_at      DATE NOT NULL,
    CONSTRAINT contract_history_unique_contract_id UNIQUE (contract_id, changed_at)
);

-- Create CATEGORY table
CREATE TABLE IF NOT EXISTS category
(
    id                          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id                     BIGINT NOT NULL,
    name                        VARCHAR(255) NOT NULL,
    description                 VARCHAR(255),
    max_spending_per_month      DOUBLE PRECISION,

    CONSTRAINT category_to_users FOREIGN KEY (user_id)
        REFERENCES users(id)
);

-- Many to Many for CATEGORY and COUNTER-PARTY
CREATE TABLE IF NOT EXISTS category_counter_party
(
    category_id                BIGINT NOT NULL,
    counter_party_id            BIGINT NOT NULL,

    CONSTRAINT fk_category FOREIGN KEY (category_id)
        REFERENCES category(id),

    CONSTRAINT fk_counter_party FOREIGN KEY (counter_party_id)
        REFERENCES counter_party(id),

    PRIMARY KEY (category_id, counter_party_id)
);

-- Create TRANSACTION table
CREATE TABLE IF NOT EXISTS transaction (
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    amount                  DOUBLE PRECISION NOT NULL,
    amount_in_bank_after    DOUBLE PRECISION NOT NULL,
    amount_in_bank_before   DOUBLE PRECISION NOT NULL,
    original_counter_party  VARCHAR(255) NOT NULL,
    bank_account_id         BIGINT NOT NULL
        CONSTRAINT transaction_to_bank_account
        REFERENCES bank_account(id),
    contract_id             BIGINT
        CONSTRAINT transaction_to_contract
        REFERENCES contract(id),
    counter_party_id        BIGINT
        CONSTRAINT transaction_to_counter_party
        REFERENCES counter_party(id),
    date                    DATE NOT NULL,
    is_hidden               BOOLEAN NOT NULL DEFAULT FALSE
);