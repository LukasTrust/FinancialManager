.searchBar {
    display: flex;
    flex: 1;
    max-width: 400px; /* Slightly wider */
}

.searchBar input {
    flex: 1;
    padding: 10px 16px; /* Larger padding */
    border: 1px solid rgba(255, 255, 255, 0.3); /* Lighter border */
    border-radius: 6px; /* Rounded corners */
    font-size: 14px;
    background: rgba(255, 255, 255, 0.9); /* Semi-transparent white */
    color: #333; /* Darker text */
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.searchBar input:focus {
    border-color: #007bff; /* Highlight on focus */
    box-shadow: 0 0 8px rgba(0, 123, 255, 0.2); /* Subtle glow */
    outline: none; /* Remove default outline */
}

table {
    width: 100%;
    height: inherit;
    border-collapse: collapse;
}

thead {
    background-color: rgba(0, 123, 255, 0.9); /* Semi-transparent header */
    color: #fff;
    position: sticky;
    top: 0;
}

thead, tbody tr {
    display: table; /* Make rows behave like a table */
    width: 100%; /* Ensure full width */
    table-layout: fixed; /* Ensure consistent column widths */
}

.selectedRow {
    background-color: rgba(0, 123, 255, 0.2) !important; /* Light blue background matching the thead */
    transition: background-color 0.2s ease-in-out; /* Smooth transition */
}

.hiddenRow {
    background-color: rgba(200, 200, 200, 0.5); /* Light gray with transparency */
    filter: grayscale(70%); /* More desaturated */
    opacity: 0.8; /* Slightly transparent */
    transition: opacity 0.5s ease, max-height 0.5s ease, padding 0.5s ease, margin 0.5s ease;
}

:is(.hiddenRow.selectedRow) {
    background-color: rgba(0, 123, 255, 0.3) !important; /* Slightly darker blue for combined state */
    filter: grayscale(50%); /* Less desaturated than .hiddenRow alone */
    opacity: 0.9; /* Less transparent than .hiddenRow alone */
    transition: opacity 0.5s ease, max-height 0.5s ease, padding 0.5s ease, margin 0.5s ease, background-color 0.2s ease-in-out;
}

.hiddenRow.hidden {
    display: none;
    transition: opacity 2s ease, max-height 2s ease, padding 2s ease, margin 2s ease;
}

.thHeader {
    cursor: default;
    font-size: 1.2rem;
}

th, td {
    padding-top: 14px;
    padding-bottom: 14px;
    text-align: left;
    color: #fff; /* White text for contrast */
    cursor: pointer;
}

.tdMargin {
    margin-left: 5px;
    margin-right: 5px;
}

th {
    font-weight: bold;
    cursor: pointer;
    user-select: none;
    transition: background 0.3s ease;
}

th:hover {
    background-color: rgba(0, 123, 255, 0.8); /* Darker on hover */
    z-index: 2;
}

th i {
    margin-left: 8px;
    font-size: 12px;
}

tbody {
    display: block;
    max-height: 70vh;
    height: 70vh;
    overflow-y: auto;
}

tbody tr {
    border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* Lighter border */
    transition: background 0.3s ease;
    height: 65px;
}

tbody tr:hover {
    background-color: rgba(255, 255, 255, 0.05); /* Subtle hover effect */
    z-index: 2;
}

.pagination {
    display: flex;
    justify-content: center;
    align-items: center;
}

.pagination button {
    padding: 12px 24px; /* Larger padding */
    margin: 0 12px; /* Increased margin */
    border: none;
    background-color: #007bff;
    color: white;
    border-radius: 6px; /* Rounded corners */
    transition: background 0.3s ease, transform 0.2s ease;
}

.pagination button:hover {
    background-color: #0056b3;
    transform: translateY(-1px); /* Slight lift on hover */
}

.pagination button:active {
    transform: translateY(0); /* Reset on click */
}

.pagination button.disabled {
    background-color: rgba(204, 204, 204, 0.5); /* Semi-transparent disabled state */
    cursor: not-allowed;
}

.pagination select {
    padding: 12px; /* Larger padding */
    margin-left: 12px; /* Increased margin */
    border: 1px solid #007bff;
    border-radius: 6px; /* Rounded corners */
    background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent white */
    color: #007bff;
    cursor: pointer;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.pagination select:hover {
    border-color: #0056b3; /* Darker border on hover */
    box-shadow: 0 0 8px rgba(0, 123, 255, 0.2); /* Subtle glow */
    z-index: 2;
}

.tableCheckbox {
    appearance: none; /* Remove default appearance */
    width: 18px;
    height: 18px;
    border: 2px solid #4a90e2; /* Border color */
    border-radius: 4px; /* Slightly rounded corners */
    background-color: white;
    cursor: pointer;
    position: relative;
    transition: background-color 0.2s, border-color 0.2s;
}

/* Checked state */
.tableCheckbox:checked {
    background-color: #4a90e2; /* Background color when checked */
    border-color: #4a90e2;
}

/* Checkmark (hidden by default) */
.tableCheckbox:checked::after {
    content: '';
    position: absolute;
    left: 5px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}

/* Hover effect */
.tableCheckbox:hover {
    border-color: #357abd; /* Darker border on hover */
    z-index: 2;
}

/* Focus state for accessibility */
.tableCheckbox:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.3); /* Subtle focus ring */
}

.rightAligned {
    text-align: end;
}

.highlightCell {
    display: inline-block; /* Shrink to fit content */
    border-radius: 8px; /* Rounded corners */
    padding: 8px 12px; /* Padding for better spacing */
    transition: background-color 0.3s ease; /* Smooth transition */
    color: white; /* White text color */
    font-weight: bold; /* Bold text for better readability */
    cursor: pointer;
}

.highlightCellTeal {
    background-color: #26a69a; /* Teal */
}

.highlightCellOrange {
    background-color: #ffa726; /* Orange */
}

.highlightCellPink {
    background-color: #ec407a; /* Pink */
}

.highlightCellPurple {
    background-color: #ab47bc; /* Purple */
}

/* Optional: Add hover effect */
.highlightCell:hover {
    filter: brightness(95%); /* Slightly darken on hover */
    z-index: 2;
}

.iconColor {
    color: #FFD700;
    font-size: 1.2rem;
    cursor: pointer;
}