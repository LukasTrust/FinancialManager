/* Reset & Global Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
    display: flex;
    background: var(--main-gradient);
}

a {
    text-decoration: none;
    color: var(--link-color);
    font-weight: var(--font-weight-normal);
    transition: all var(--transition-fast);
}

/* Typography */
h1, h2, h3, p {
    color: var(--text-color);
    text-align: center;
    cursor: default;
}

h1 {
    font-size: var(--font-size-xl);
}

h2 {
    font-size: var(--font-size-lg);
}

h3 {
    font-size: var(--font-size-sm);
}

p {
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-normal);
    margin: var(--spacing-lg) 0 var(--spacing-sm);
}

.normalText {
    font-size: var(--font-size-sm);
    color: var(--text-color);
    font-weight: var(--font-weight-normal);
    margin-left: var(--spacing-sm);
    cursor: default;
}

.textHeader {
    display: flex;
    align-items: center;
    font-size: 18px;
    font-weight: var(--font-weight-bold);
}

.textHeader * {
    cursor: pointer;
}

/* Layout Containers */
.mainContainer {
    display: flex;
    padding-left: var(--spacing-md);
    padding-top: var(--spacing-lg);
    width: calc(100% - 300px);
    transition: width var(--transition-normal), padding-left var(--transition-normal);
    will-change: width;
}

.horizontalContainer {
    display: flex;
    gap: var(--spacing-md);
}

.verticalContainer {
    display: flex;
    flex-direction: column;
}

.mainContent {
    width: 60%;
    padding-right: var(--spacing-md);
}

.sideContent {
    width: 40%;
}

.chartContainer {
    display: flex;
    background: #ffffff;
    border-radius: var(--border-radius-md);
    flex-grow: 1;
    height: 60vh;
}

.chartContainer canvas {
    width: 100% !important;
    height: 100% !important;
}

.boxContainer {
    height: fit-content;
    background: white;
    border-radius: var(--border-radius-lg);
    padding: var(--spacing-md);
    box-shadow: var(--box-shadow-md);
    transition: transform var(--transition-fast);
    align-items: center;
}

.boxContainer:hover {
    transform: translateY(-5px);
    z-index: 2;
}

.wrapContainer {
    flex-wrap: wrap;
    overflow: auto;
}

/* Utilities */
.marginBottom {
    margin-bottom: var(--spacing-sm);
}

.marginBottomBig {
    margin-bottom: var(--spacing-lg);
}

.marginTop {
    margin-top: var(--spacing-sm);
}

.marginTopBig {
    margin-top: var(--spacing-lg);
}

.marginLeftBig {
    margin-left: var(--spacing-lg);
}

.marginRightBig {
    margin-right: var(--spacing-lg);
}

.marginLeftAuto {
    margin-left: auto;
}

.paddingTop {
    padding-top: var(--padding-sm);
}

.paddingBottom {
    padding-bottom: var(--padding-sm);
}

.widthFull {
    width: 100%;
}

.width95 {
    width: 95%;
}

.widthHalf {
    width: 50%;
}

.width300 {
    width: 300px !important;
}

.width350 {
    width: 350px !important;
}

.height17vh {
    height: 17vh;
}

.height90vh {
    height: 90vh;
}

.heightHaft {
    height: 50%;
}

.height40vh {
    min-height: 40vh;
    max-height: 40vh;
}

.bold {
    font-weight: var(--font-weight-bold);
}

.alignSelfCenter {
    align-self: center;
}

.alignSelfStart {
    align-self: start;
}

.alignItemsCenter {
    align-items: center;
}

.justifyContentCenter {
    display: flex;
    justify-content: center;
}

/* List Items */
.listContainer {
    display: flex;
    min-height: 8vh;
    align-items: center;
    white-space: nowrap;
}

.listItem {
    display: flex;
    align-items: center;
    background: var(--secondary-color);
    box-shadow: var(--box-shadow-sm);
    border-radius: var(--border-radius-md);
    cursor: pointer;
    transition: transform var(--transition-slow), box-shadow var(--transition-slow),
    opacity var(--transition-slow), background var(--transition-slow);
    margin: 8px;
    will-change: transform, opacity, background;
    width: inherit;
}

.listItem:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    z-index: 2;
}

.listItemSmall {
    display: flex;
    align-items: center;
    background: var(--secondary-color);
    box-shadow: var(--box-shadow-sm);
    border-radius: var(--border-radius-md);
    cursor: pointer;
    transition: transform var(--transition-fast), box-shadow var(--transition-fast);
    width: fit-content;
    gap: var(--spacing-sm);
    margin-left: 15px;
}

.listItemSmall:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    z-index: 2;
}

.selected {
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.5);
    font-weight: var(--font-weight-bold);
    filter: brightness(1.3) contrast(1.1);
    transform: scale(1.02);
    transition: all var(--transition-normal);
}

/* Buttons */
button, .button {
    border: none;
    outline: none;
    cursor: pointer;
    font-weight: var(--font-weight-normal);
    border-radius: var(--border-radius-xl);
    font-size: var(--font-size-sm);
    transition: all var(--transition-normal);
    padding: var(--spacing-sm) var(--spacing-md);
    background-color: var(--button-bg);
    color: var(--button-color);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transform: translateZ(0); /* Enable GPU acceleration */
    backface-visibility: hidden;
}

button:hover, .button:hover {
    transform: scale(var(--button-hover-scale)) translateZ(0);
    box-shadow: var(--button-shadow);
    z-index: 20;
}

/* Button variants */
.removeButton {
    --button-bg: var(--danger-color);
    --button-color: white;
    --button-hover-brightness: 1.2;
    --button-shadow: 0 2px 8px rgba(244, 67, 54, 0.3);

    width: var(--spacing-xl);
    margin-left: auto;
    border-radius: 0 var(--border-radius-sm) var(--border-radius-sm) 0;
    font-size: var(--font-size-md);
}

.iconOnlyButton {
    color: var(--button-color);
    background: transparent;
    border-radius: 50%;
    padding: var(--spacing-xs);
}

.iconOnlyButton:hover {
    box-shadow: none;
    transform: none !important;
    scale: 1.1;
}

.exitButton {
    --button-bg: var(--danger-color);
    --button-color: white;
    --button-hover-bg: var(--danger-color-dark);
    --button-hover-brightness: 1;

    position: absolute;
    top: var(--spacing-sm);
    right: var(--spacing-sm);
    width: var(--spacing-lg);
    height: var(--spacing-lg);
    font-weight: var(--font-weight-bold);
}

.exitButton:hover {
    background-color: var(--button-hover-bg);
}

.exitButton:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(244, 67, 54, 0.5);
}

.backButton {
    font-size: var(--font-size-xl);
    width: var(--spacing-xl);
    height: var(--spacing-xl);
    padding: var(--spacing-xs);
}

.iconButton {
    --button-bg: var(--accent-color);
    --button-color: white;
    --button-hover-bg: var(--accent-color-dark);
    --button-hover-scale: 1;
    --button-hover-translate-y: -2px;
    --button-shadow: 0 4px 6px rgba(67, 97, 238, 0.2);

    padding: var(--spacing-sm) var(--spacing-lg);
    border-radius: 50px;
    text-decoration: none;
    box-shadow: var(--button-shadow);
}

.iconButton:hover {
    transform: translateY(var(--button-hover-translate-y));
    box-shadow: 0 6px 12px rgba(67, 97, 238, 0.3);
}

.iconButton * {
    margin-right: var(--spacing-xs);
    font-size: var(--font-size-md);
    color: var(--button-color);
}

.maxButton {
    --button-bg: white;
    --button-color: black;

    width: 100%;
}

/* Utility classes for button states */
.button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
}

.button:active {
    transform: scale(0.98) translateZ(0);
}

/* Tooltip */
.tooltip {
    position: relative;
    cursor: default;
    color: gray;
    font-size: var(--font-size-lg);
}

.tooltipText {
    visibility: hidden;
    background-color: black;
    font-size: 16px;
    color: white;
    text-align: center;
    padding: 6px 10px;
    border-radius: var(--border-radius-sm);
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    max-width: 220px;
    width: max-content;
    opacity: 0;
    z-index: 1000;
    transition: opacity var(--transition-normal) var(--transition-fast);
    box-shadow: var(--box-shadow-md);
    white-space: normal;
    bottom: 130%;
}

.tooltipText::after {
    content: "";
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    border-width: 6px;
    border-style: solid;
    top: 100%;
    margin-top: -1px;
    border-color: black transparent transparent transparent;
}

.tooltipBottom .tooltipText {
    top: 130%;
    bottom: auto;
}

.tooltipBottom .tooltipText::after {
    bottom: 100%;
    top: auto;
    border-color: transparent transparent black transparent;
}

.tooltip:hover .tooltipText {
    visibility: visible;
    opacity: 1;
}

/* Visibility Transitions */
.beforeHidden {
    opacity: 1;
    overflow: hidden;
    transition: opacity var(--transition-slow), max-height 2s ease;
}

.hidden {
    opacity: 0;
    max-height: 0;
    height: 0;
    padding: 0;
    margin: 0;
    overflow: hidden;
    transition: opacity 2s ease, max-height 2s ease;
}

/* Status Indicators */
.positive {
    background: var(--positive-bg);
    border: 2px solid var(--positive-color);
    border-radius: var(--border-radius-sm);
    padding: var(--spacing-sm);
    width: fit-content;
    align-self: center;
}

.positive * {
    color: var(--positive-color);
}

.negative {
    background: var(--negative-bg);
    border: 2px solid var(--negative-color);
    border-radius: var(--border-radius-sm);
    padding: var(--spacing-sm);
    width: fit-content;
    align-self: center;
}

.negative * {
    color: var(--negative-color);
}

.red {
    background: var(--negative-color);
}

dialog {
    width: 80%;
    height: 65%;
    border: none;
    border-radius: var(--border-radius-lg);
    box-shadow: var(--box-shadow-lg);
    text-align: center;
    background: var(--dialog-gradient);
    color: #f8f9fa;
    opacity: 0;
    transform: translateY(-20px);
    transition: opacity var(--transition-normal), transform var(--transition-normal);
    overflow: visible;
    position: fixed;
    inset: 0;
    margin: auto;
}

dialog::backdrop {
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(5px);
}

dialog[open] {
    opacity: 1;
    transform: translateY(0);
}